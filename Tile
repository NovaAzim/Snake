public class Tile extends Rectangle {

    private int direction;
    private Color col;
    private Color blackCol;
    private int dimension = 20;
    public Tile(int x, int y) {
        super(x,y,0,0);
        this.setSize(dimension,dimension);
        this.setDirection(1);
        col = Color.green;

    }
    public Tile(int x, int y, int direction) {
        super(x,y,0,0);
        this.setSize(dimension,dimension);
        this.direction = direction;
        col = Color.green;
    }
    public void draw(Graphics2D win) {
        win.setColor(col);
        win.draw(this);
    }
    public void unDraw(Graphics2D win) {
        win.setColor(blackCol);
        win.draw(this);
    }

    public void fill(Graphics2D pb) {
        pb.setColor(Color.red);
        pb.fillOval(this.x,this.y,this.width,this.height);
    }
    public void unFill(Graphics2D pb) {
        pb.setColor(Color.black);
        pb.fillOval(this.x,this.y,this.width,this.height);
    }
    public void setHeadDirection() {
        if (GDV5.KeysPressed[KeyEvent.VK_A]) {
            direction = 1;
        }
        if (GDV5.KeysPressed[KeyEvent.VK_D]) {
            direction = 3;
        }
        if (GDV5.KeysPressed[KeyEvent.VK_W]) {
            direction = 2;
        }
        if (GDV5.KeysPressed[KeyEvent.VK_S]) {
            direction = 4;
        }
    }
    public void move() {
        if (direction == 1) {
            this.x -= this.dimension;
        }
        if (direction == 2) {
            this.y -= this.dimension;
        }
        if (direction == 3) {
            this.x += this.dimension;
        }
        if (direction == 4) {
            this.y += this.dimension;
        }
    }

    public int getDirection() {
        return direction;
    }

    public void setDirection(int direction) {
        this.direction = direction;
    }

    public void updateDirection(Tile[] board) {
        for(int i = 0; i < board.length; i++) {
            if (this.getX() == board[i].getX() && this.getY() == board[i].getY()) {
                board[i].setDirection(this.getDirection());

            }
        }

    }
    public int getDimension() {
        return dimension;
    }
    public void setDimension(int size) {
        this.dimension = size;
    }

}



